type: edu
files:
- name: tests.py
  visible: false
  text: |
    from hstest import *


    class LastPencilTest(StageTest):
        @dynamic_test
        def test(self):
            main = TestedProgram()
            output = main.start().lower()
            lines = output.strip().split('\n')

            lines_non_empty = [s for s in lines if len(s) != 0]

            if len(lines_non_empty) != 2:
                raise WrongAnswer("There should be exactly 2 non-empty lines")

            check_pencils = [s for s in lines if '|' in s]

            if len(check_pencils) == 0:
                raise WrongAnswer("There should be a pencils-line in output with some '|' symbols")
            if len(check_pencils) > 1:
                raise WrongAnswer("There should be exactly one line in output, that contains '|' symbols")
            if len(list(set(check_pencils[0]))) != 1:
                raise WrongAnswer("The pencils-line should not contain any other symbols except the '|'")

            check_turn = any("your turn" in s for s in lines)

            if not check_turn:
                raise WrongAnswer("There should be a line in output containing \"Your turn\" substring")

            return CheckResult.correct()


    if __name__ == '__main__':
        LastPencilTest().run_tests()
  learner_created: false
- name: game.py
  visible: true
  learner_created: false
feedback_link: https://hyperskill.org/projects/258/stages/1302/implement#comment
status: Solved
record: 5
