type: edu
files:
- name: bacteria.py
  visible: true
  text: |-
    strand, complement = input().split()
    if 'CTGCAG' in strand:
        strand = strand.replace('CTGCAG', 'C TGCAG')
    if 'GACGTC' in strand:
        complement = complement.replace('GACGTC', 'GACGT C')
    print(strand, complement, sep='\n')
  learner_created: false
- name: tests.py
  visible: false
  text: |-
    from hstest import *


    class ComplementStrandTest(StageTest):
        def common_test(self, test_str, complement_str):
            program = TestedProgram()
            program.start()

            if not program.is_waiting_input():
                raise WrongAnswer("You program should input the string")

            output = program.execute(test_str)

            if len(output.split()) != 2:
                raise WrongAnswer("Your answer should consist of two lines")
            elif len(output.split()[0]) != len(test_str):
                raise WrongAnswer("Check the original sequence length")
            elif len(output.split()[1]) != len(complement_str):
                raise WrongAnswer("Check the complementary sequence length")
            elif output.split()[0] != test_str:
                raise WrongAnswer("Error in the original sequence content")
            elif output.split()[1] != complement_str:
                raise WrongAnswer("Error in the complementary sequence content")
            else:
                return CheckResult.correct()

        @dynamic_test
        def test1(self):
            return self.common_test("CTAGAGGATCCCCG", "GATCTCCTAGGGGC")

        @dynamic_test
        def test2(self):
            return self.common_test("ATGAAACAGCATGACTTTTTCAAGAGTGCCATGCCCGAAGGTTATGTA",
                                    "TACTTTGTCGTACTGAAAAAGTTCTCACGGTACGGGCTTCCAATACAT")

        @dynamic_test
        def test3(self):
            return self.common_test("GCATGCCTGCAGGTCGACTCTAGAGGATCCCCGGGTACCTAGAATTAAAGAGGAGAAATTAAGCATGCGTAAAGGAGAAGAACTTTTCACTGGAGTTGTCCCAATTCTTGTTGAATTAGATGGTGATGTTAATGGGCACAAATTTTCTGTCAGTGGAGAGGGTGAAGGTGATGCAACATACGGAAAACTTACCCTTAAATTTATTTGCACTACTGGAAAACTACCTGTTCCATGGCCAACACTTGTCACTACTTTCGGTTATGGTGTTCAATGCTTTGCGAGATACCCAGATCATATGAAACAGCATGACTTTTTCAAGAGTGCCATGCCCGAAGGTTATGTACAGGAAAGAACTATATTTTTCAAAGATGACGGGAACTACAAGACACGTGCTGAAGTCAAGTTTGAAGGTGATACCCTTGTTAATAGAATCGAGTTAAAAGGTATTGATTTTAAAGAAGATGGAAACATTCTTGGACACAAATTGGAATACAACTATAACTCACACAATGTATACATCATGGCAGACAAACAAAAGAATGGAATCAAAGTTAACTTCAAAATTAGACACAACATTGAAGATGGAAGCGTTCAACTAGCAGACCATTATCAACAAAATACTCCAATTGGCGATGGCCCTGTCCTTTTACCAGACAACCATTACCTGTCCACACAATCTGCCCTTTCGAAAGATCCCAACGAAAAGAGAGACCACATGGTCCTTCTTGAGTTTGTAACAGCTGCTGGGATTACACATGGCATGGATGAACTATACAAAAGGCCTGCAGCAAACGACGAAAACTACGCTTTAGTAGCTTAATAAGCTTAATTAGCTGACCTACTAGTCGGCCGTCTCGACATGAACGCAGGAAAGAACATGTGAGCAAAAGGCCAGCAAAAGGCCAGGAACCGTAAAAAGGCCGCGTTGCTGGCGTTTTTCCATAGGCTCCGCCCCCCTGACGAGCATCACAAAAATCGACGCTCAAGTCAGAGGTGGCGAAACCCGACAGGACTATAAAGATACCAGGCGTTTCCCCCTGGAAGCTCCCTCGTGCGCTCTCCTGTTCCGACCCTGCCGCTTACCGGATACCTGTCCGCCTTTCTCCCTTCGGGAAGCGTGGCGCTTTCTCAATGCTCACGCTGTAGGTATCTCAGTTCGGTGTAGGTCGTTCGCTCCAAGCTGGGCTGTGTGCACGAACCCCCCGT",
                                    "CGTACGGACGTCCAGCTGAGATCTCCTAGGGGCCCATGGATCTTAATTTCTCCTCTTTAATTCGTACGCATTTCCTCTTCTTGAAAAGTGACCTCAACAGGGTTAAGAACAACTTAATCTACCACTACAATTACCCGTGTTTAAAAGACAGTCACCTCTCCCACTTCCACTACGTTGTATGCCTTTTGAATGGGAATTTAAATAAACGTGATGACCTTTTGATGGACAAGGTACCGGTTGTGAACAGTGATGAAAGCCAATACCACAAGTTACGAAACGCTCTATGGGTCTAGTATACTTTGTCGTACTGAAAAAGTTCTCACGGTACGGGCTTCCAATACATGTCCTTTCTTGATATAAAAAGTTTCTACTGCCCTTGATGTTCTGTGCACGACTTCAGTTCAAACTTCCACTATGGGAACAATTATCTTAGCTCAATTTTCCATAACTAAAATTTCTTCTACCTTTGTAAGAACCTGTGTTTAACCTTATGTTGATATTGAGTGTGTTACATATGTAGTACCGTCTGTTTGTTTTCTTACCTTAGTTTCAATTGAAGTTTTAATCTGTGTTGTAACTTCTACCTTCGCAAGTTGATCGTCTGGTAATAGTTGTTTTATGAGGTTAACCGCTACCGGGACAGGAAAATGGTCTGTTGGTAATGGACAGGTGTGTTAGACGGGAAAGCTTTCTAGGGTTGCTTTTCTCTCTGGTGTACCAGGAAGAACTCAAACATTGTCGACGACCCTAATGTGTACCGTACCTACTTGATATGTTTTCCGGACGTCGTTTGCTGCTTTTGATGCGAAATCATCGAATTATTCGAATTAATCGACTGGATGATCAGCCGGCAGAGCTGTACTTGCGTCCTTTCTTGTACACTCGTTTTCCGGTCGTTTTCCGGTCCTTGGCATTTTTCCGGCGCAACGACCGCAAAAAGGTATCCGAGGCGGGGGGACTGCTCGTAGTGTTTTTAGCTGCGAGTTCAGTCTCCACCGCTTTGGGCTGTCCTGATATTTCTATGGTCCGCAAAGGGGGACCTTCGAGGGAGCACGCGAGAGGACAAGGCTGGGACGGCGAATGGCCTATGGACAGGCGGAAAGAGGGAAGCCCTTCGCACCGCGAAAGAGTTACGAGTGCGACATCCATAGAGTCAAGCCACATCCAGCAAGCGAGGTTCGACCCGACACACGTGCTTGGGGGGCA")


    if __name__ == "__main__":
        ComplementStrandTest().run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/projects/209/stages/1046/implement#comment
status: Solved
record: 2
