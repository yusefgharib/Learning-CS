type: edu
files:
- name: control.py
  visible: true
  text: |
    with open(input()) as f:
        text = f.read().split('\n')
    gc_average = []
    seq = [text[i] for i in range(1, len(text), 4)]
    counts = [len(seq[i]) for i in range(len(seq))]
    print(f'Reads in the file = {len(seq)}:')
    unique_num = len(seq) - len(list(set(seq)))
    for i in range(len(seq)):
        gc_average.append(round(((seq[i].count('G') + seq[i].count('C')) / len(seq[i])) * 100, 2))
    print(f'\nRepeats = {unique_num}')
    print(f'Reads sequence average length = {round(sum(counts) / len(seq))}')
    print(f'GC content average = {round(sum(gc_average) / len(gc_average), 2)}%')
  learner_created: false
- name: tests.py
  visible: false
  text: |-
    from hstest import *
    import re


    class NsChecker(StageTest):

        def common_test(self, file_name, AMOUNT, AVERAGE, REPEATS, READSN, GC, NSPER):
            program = TestedProgram()
            program.start()

            if not program.is_waiting_input():
                raise WrongAnswer("You program should input the path to the file")

            reply = program.execute(file_name)

            # if the reply is empty
            if not reply:
                raise WrongAnswer("You gave an empty answer")
            reply_low = reply.replace(" ", "").lower()

            # if each point presents only once
            def check_format(line, substring):
                substring_low = substring.replace(" ", "").lower()
                if line.count(substring_low) != 1:
                    raise WrongAnswer(f"Substring \"{substring}\" should occur once in the output.\n"
                                      f"Found {line.count(substring_low)} occurrence(s).\n"
                                      f"Check the output format in the Examples section.\n"
                                      f"Make sure there is no typos in the output of your program.")

            # check values
            def check_number(total_reply, substring, correct_number):
                float_lines = ["gccontentaverage=", "nsperreadsequence="]
                substring_low = substring.replace(" ", "").lower()
                pattern = f"{substring_low}([0-9]+)"

                if substring_low in float_lines:
                    pattern = pattern[:-1] + "\.[0-9]+)"
                number_search = re.search(pattern=pattern, string=total_reply)

                if number_search is None:
                    raise WrongAnswer(f"Didn't find numerical answer in the \"{substring}\" line. Please, check if the answer format is correct")
                number = float(number_search.group(1))
                if number != correct_number:
                    raise WrongAnswer(f"The value of \"{substring}\" is incorrect")

            # dict of points for checking + correct values
            answer_points = {"Reads in the file =": AMOUNT,
                             "Reads sequence average length =": AVERAGE,
                             "Repeats =": REPEATS,
                             "GC content average =": GC,
                             "Reads with Ns =": READSN,
                             "Ns per read sequence =": NSPER}

            # run checking!
            for point in answer_points.keys():
                check_format(reply_low, point)
            for point, correct_result in answer_points.items():
                check_number(reply_low, point, correct_result)
            return CheckResult.correct()

        @dynamic_test
        def test1(self):
            return self.common_test("test/test1.fastq", AMOUNT=4, AVERAGE=101, REPEATS=0,
                                    READSN=4, GC=38.61, NSPER=20.3)

        @dynamic_test
        def test2(self):
            return self.common_test("test/test2.fastq", AMOUNT=4, AVERAGE=133, REPEATS=0,
                                    READSN=1, GC=44.49, NSPER=0.17)


    if __name__ == '__main__':
        NsChecker().run_tests()
  learner_created: false
- name: test/test1.fastq
  visible: false
  text: |
    @SRR1234567 8
    CANCANNTNNGTGCNCAACNCCCGNAGCAGGNAANGNGTTATCTAAACTTCTTNAACCNGTTTNAGCANTNGAANNNNGNCTNGNCANTNCGNCGANGCAG
    +
    ?????????????????????????????????????????????????????????????????????????????????????????????????????
    @SRR1234567 14
    TGANCNCTTACCNNNTTNNCGCGANCATACGNCAATCCGACTCNCTAGCGATTTNGACGCCAGNNGCCCNTACTCNCNGGGGANATACCTATATCGNGACT
    +
    ?????????????????????????????????????????????????????????????????????????????????????????????????????
    @SRR1234567 15
    NNGNTGNACGNGGGNGANTAANATCNTACAATTNNTCTGATTNATNCGNACCGTCAACTACGTTAGNGGTAANNCTAAGTTTATGCCGNAACTCACTCNAG
    +
    ?????????????????????????????????????????????????????????????????????????????????????????????????????
    @SRR1234567 16
    CATNCNGGATAAACCGNANACTCNNAANGCTTTTCGCAATCTCACNTGTCGANTNGGGATGANTNAAGTTTACGTGNCGNTTGAGACNACGGNTTGNAGGN
    +
    ?????????????????????????????????????????????????????????????????????????????????????????????????????
  learner_created: false
- name: test/test2.fastq
  visible: false
  text: |
    @SRR1234567.1 1/1
    TTCGTGATTGTTTTCACTATCGTTCCGTTTGGCACTGCATGGTGCCCAAGGCACAGCGTTGCCGTGCTGTTGTCATTTCCAGGAAGTTTTTGAGCGAAAACCAGACATAGAATGTAGCTCAAAGCAATGATAGTCTTCATGGTTAATAG
    +
    ,<==<<<<A@@@@@@@EEE;CEE+AC>EC;>EFFDC@=A@AE999DDD>>@E777EE75C>EF>EDEEFFFF--AE>EDEEEED=C-58AE=<D=<<DD=D9CDD@EEDED@DEDDE*9;@DDED@@@7@E*;*888@*8;@8@;;@@E
    @SRR1234567.2 2/1
    NATTAACCATGAAGACTATCATTGCTTTGAGCTACATTCTATGTCTGGTTTTCGCTCAAAAACTTCCTGGAAATGACAACAGCACGGCAACGCTGTGCCTTGGGCACCATGCAGTGCCAAACGGAACGATAGTGAAAACAATCACGAATGA
    +
    #5<???BBEEEDEDDDGGGGGGIIIIIIIIIIIIIIIIIIIIIHIIIIFHHIIHHHHHIIIIHIIIIIIIHIIIIIIIIIIIIIIHHHHHHHHHHEHHHHHFFHHHHHHFFHHGFGGGGGGGGGGGGGEEEGCEEGGGGGEEGGGGCGEGG
    @SRR1234567.3 3/1
    GTTTGGCACTGCATGGTGCCCAAGGCACAGCGTTGCCGTGCTGTTGTCATTTCCAGGAAGTTTTTGAGCGAAAACCAGACATAGAATGTAGCTCAAAGCAATGATAGTCTTCATGGTTAATAG
    +
    9=9===>>@@@--5-588C;C;6+AE>6-A@+7>++-+@C+A.ECFE..8E.8--AE+C,EA@FEC5+-**55C-++++++++==D+5+,,+++++6CEDE====C=3C:@D+2++2<:DE2*
    @SRR1234567.4 4/1
    GTGCCCAAGGCACAGCGTTGCCGTGCTGTTGTCATTTCCAGGAAGTTTTTGAGCGAAAACCAGACATAGAATGTAGCTCAAAGCAATGATAGTCTTCATGGTTAATAG
    +
    ?????BB?BBDBBDBDDEEDEFHHHHHHFHCFHHHHHFHHHHCFHAFHHHHHHGHHCCEEED@@CCFFFHHHHHHHHFHHHHHHHFHHHHHFCFHCFDFFH?DD>CFF
  learner_created: false
- name: test1.fastq
  visible: true
  learner_created: true
- name: test2.fastq
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/235/stages/1183/implement#comment
status: Solved
record: 4
